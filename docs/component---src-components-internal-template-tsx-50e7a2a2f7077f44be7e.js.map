{"version":3,"sources":["webpack:///./src/components/internal/ComponentsNavigation.tsx","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./src/components/internal/Code.tsx","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/components/internal/MethodsTable.tsx","webpack:///./src/components/internal/PropsTable.tsx","webpack:///./src/components/internal/Knobs.tsx","webpack:///./src/components/internal/Template.tsx"],"names":["ComponentsNavigation","className","rest","result","clsx","variant","allMdx","nodes","map","slug","fields","title","frontmatter","key","to","MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","Function","call","Code","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","fn","MethodsTable","methods","description","name","params","returns","type","Fragment","PropsTable","prop","defaultValue","value","required","aria-label","KnobsDemo","KnobsForm","controls","control","index","id","checked","onChange","htmlFor","label","options","Knobs","component","pathname","useLocation","useState","closeable","setCloseable","setChildren","setVariant","includes","Alert","onClose","console","log","undefined","event","target","Button","onSubmit","preventDefault","Template","render","this","data","body","docgen","tableOfContents","parsedDocgen","JSON","parse","Layout","main","Heading","items","url","Anchor","href","Array","isArray","Component","query"],"mappings":"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","file":"component---src-components-internal-template-tsx-50e7a2a2f7077f44be7e.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport {graphql, useStaticQuery} from 'gatsby';\nimport {Link} from './Anchor';\nimport {Heading} from './Heading';\n\nexport type ComponentsNavigationProps = React.HTMLAttributes<HTMLElement>;\n\nexport const ComponentsNavigation: React.FC<ComponentsNavigationProps> = ({\n  className,\n  ...rest\n}) => {\n  const result = useStaticQuery<{\n    allMdx: {\n      nodes: Array<{\n        fields: {\n          slug: string;\n        };\n        frontmatter: {\n          title: string;\n        };\n      }>;\n    };\n  }>(graphql`\n    {\n      allMdx(\n        filter: {fileAbsolutePath: {regex: \"/components/external/\"}}\n        sort: {fields: frontmatter___title}\n      ) {\n        nodes {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <nav className={clsx('text-gray-700', className)} {...rest}>\n      <Heading className=\"mb-0\" variant={3}>\n        Navigation\n      </Heading>\n      <ul>\n        {result.allMdx.nodes.map(({fields: {slug}, frontmatter: {title}}) => (\n          <li key={slug}>\n            <Link to={slug}>{title}</Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","import React from 'react';\nimport clsx from 'clsx';\n\nexport type CodeProps = React.HTMLAttributes<HTMLElement>;\n\nexport const Code: React.FC<CodeProps> = ({className, ...rest}) => (\n  <code\n    className={clsx(\n      'bg-gray-100 p-1 rounded-sm text-red-700 text-sm',\n      className\n    )}\n    {...rest}\n  />\n);\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {Code} from './Code';\n\nexport interface MethodsTableProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  methods: ReadonlyArray<\n    Readonly<{\n      description?: string;\n      docblock: string;\n      modifiers: any[];\n      name: string;\n      params: ReadonlyArray<\n        Readonly<{\n          description?: any;\n          name: string;\n          type: Readonly<{\n            name: string;\n          }>;\n        }>\n      >;\n      returns: string | null;\n    }>\n  >;\n}\n\nexport const MethodsTable: React.FC<MethodsTableProps> = ({\n  className,\n  methods,\n  ...rest\n}) => (\n  <table className={clsx('border-collapse border-gray-300 w-full')} {...rest}>\n    <thead className=\"align-top border-b text-left\">\n      <th className=\"p-2\">Name</th>\n      <th className=\"p-2\">Description</th>\n      <th className=\"p-2\">Parameters</th>\n      <th className=\"p-2\">Return type</th>\n    </thead>\n    <tbody className=\"align-top\">\n      {methods.map(({description, name, params, returns}) => (\n        <tr key={name}>\n          <th className=\"font-normal p-2 text-left\" scope=\"row\">\n            <Code>{name}</Code>\n          </th>\n          <td className=\"p-2 text-sm\">{description}</td>\n          <td className=\"p-2\">\n            {!!params.length && (\n              <dl>\n                {params.map(({description, name, type}) => (\n                  <React.Fragment key={name}>\n                    <dt>\n                      <Code>\n                        {name}: {type.name}\n                      </Code>\n                    </dt>\n                    <dd>{description}</dd>\n                  </React.Fragment>\n                ))}\n              </dl>\n            )}\n          </td>\n          <td className=\"p-2\">\n            <Code>{returns ? returns : 'void'}</Code>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport {Code} from './Code';\n\nexport interface PropsTableProps extends React.HTMLAttributes<HTMLDivElement> {\n  readonly props: Record<\n    string,\n    Readonly<{\n      defaultValue?: Readonly<{\n        value: string;\n      }>;\n      description?: string;\n      name: string;\n      parent?: Readonly<{\n        filename: string;\n        name: string;\n      }>;\n      required: boolean;\n      type: any;\n    }>\n  >;\n}\n\nexport const PropsTable: React.FC<PropsTableProps> = ({\n  className,\n  props,\n  ...rest\n}) => (\n  <table\n    className={clsx('border-collapse border-gray-300 w-full', className)}\n    {...rest}\n  >\n    <thead className=\"align-top border-b text-left\">\n      <th className=\"p-2\">Name</th>\n      <th className=\"p-2\">Type</th>\n      <th className=\"p-2\">Default value</th>\n      <th className=\"p-2\">Description</th>\n      <th className=\"p-2\">Required?</th>\n    </thead>\n    <tbody className=\"align-top\">\n      {Object.keys(props).map((key) => {\n        const prop = props[key];\n\n        return (\n          <tr className=\"border-b\" key={key}>\n            <th className=\"font-normal p-2\" scope=\"row\">\n              <Code>{prop.name}</Code>\n            </th>\n            <td className=\"p-2\">\n              <Code>{prop.type.name}</Code>\n            </td>\n            <td className=\"p-2\">\n              {!!prop.defaultValue && <Code>{prop.defaultValue.value}</Code>}\n            </td>\n            <td className=\"p-2 text-sm\">{prop.description}</td>\n            <td className=\"p-2 text-sm\">\n              {prop.required ? (\n                <span aria-label=\"Required\">Yes</span>\n              ) : (\n                <span aria-label=\"Not required\">No</span>\n              )}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React, {useState} from 'react';\nimport clsx from 'clsx';\nimport {useLocation} from '@reach/router';\n\nimport Alert from '../external/Alert';\nimport Button from '../external/Button';\n\nconst KnobsDemo: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({\n  children,\n}) => (\n  <div className=\"bg-white flex items-center justify-center p-4 w-full md:w-2/3\">\n    {children}\n  </div>\n);\n\nconst KnobsForm: React.FC<\n  React.FormHTMLAttributes<HTMLFormElement> & {\n    controls: any[];\n  }\n> = ({className, controls, ...rest}) => (\n  <form className={clsx('p-4 w-full md:w-1/3', className)}>\n    {controls.map((control, index) => {\n      const id = `knobs-${index}`;\n\n      return (\n        <div className={clsx(index < controls.length - 1 && 'mb-2')}>\n          {control.type === 'checkbox' && (\n            <>\n              <input\n                checked={control.value}\n                id={id}\n                onChange={control.onChange}\n                type=\"checkbox\"\n              />{' '}\n              <label htmlFor={id}>{control.label}</label>\n            </>\n          )}\n          {control.type === 'select' && (\n            <>\n              <label className=\"block pb-1\" htmlFor={id}>\n                {control.label}\n              </label>\n              <select\n                className=\"border border-gray-600 px-2 py-1 rounded-sm text-black w-full\"\n                id={id}\n                onChange={control.onChange}\n                value={control.value}\n              >\n                {control.options.map((value) => (\n                  <option key={value} value={value}>\n                    {value}\n                  </option>\n                ))}\n              </select>\n            </>\n          )}\n          {control.type === 'text' && (\n            <>\n              <label className=\"block pb-1\" htmlFor={id}>\n                {control.label}\n              </label>\n              <input\n                className=\"border border-gray-600 px-2 py-1 rounded-sm text-black w-full\"\n                id={id}\n                onChange={control.onChange}\n                type=\"text\"\n                value={control.value}\n              />\n            </>\n          )}\n        </div>\n      );\n    })}\n  </form>\n);\n\nexport interface KnobProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const Knobs: React.FC<KnobProps> = ({className, ...rest}) => {\n  const {pathname} = useLocation();\n  const [closeable, setCloseable] = useState(false);\n  const [children, setChildren] = useState('Sample component.');\n  const [variant, setVariant] = useState('success');\n  let component;\n  let controls;\n\n  // TODO: Make Knobs more flexible\n  if (pathname.includes('Alert')) {\n    component = (\n      <Alert\n        children={children}\n        onClose={closeable ? console.log : undefined}\n        variant={variant}\n      />\n    );\n    controls = [\n      {\n        onChange: (event) => setChildren(event.target.value),\n        label: 'Children',\n        type: 'text',\n        value: children,\n      },\n      {\n        label: 'Closeable',\n        onChange: (event) => setCloseable(!closeable),\n        type: 'checkbox',\n        value: closeable,\n      },\n      {\n        label: 'Variant',\n        onChange: (event) => setVariant(event.target.value),\n        options: ['error', 'success', 'warning'],\n        type: 'select',\n        value: variant,\n      },\n    ];\n  } else {\n    component = <Button children={children} variant={variant} />;\n    controls = [\n      {\n        onChange: (event) => setChildren(event.target.value),\n        label: 'Children',\n        type: 'text',\n        value: children,\n      },\n      {\n        label: 'Variant',\n        onChange: (event) => setVariant(event.target.value),\n        options: ['primary', 'secondary', 'tertiary'],\n        type: 'select',\n        value: variant,\n      },\n    ];\n  }\n\n  return (\n    <div\n      className={clsx(\n        'bg-gray-100 border flex flex-wrap rounded-sm',\n        className\n      )}\n      {...rest}\n    >\n      <KnobsDemo>{component}</KnobsDemo>\n      <KnobsForm\n        controls={controls}\n        onSubmit={(event) => event.preventDefault()}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport {MDXRenderer} from 'gatsby-plugin-mdx';\nimport {graphql} from 'gatsby';\n\nimport Layout from './Layout';\nimport {Anchor} from './Anchor';\nimport {ComponentsNavigation} from './ComponentsNavigation';\nimport {Heading} from './Heading';\nimport {MethodsTable} from './MethodsTable';\nimport {PropsTable} from './PropsTable';\nimport {Knobs} from './Knobs';\n\nexport interface TemplateProps {\n  data: Readonly<{\n    mdx: Readonly<{\n      body: string;\n      fields: Readonly<{\n        docgen: string;\n      }>;\n      frontmatter: Readonly<{\n        description?: string;\n        title: string;\n      }>;\n      tableOfContents: Readonly<{\n        items?: ReadonlyArray<\n          Readonly<{\n            title: string;\n            url: string;\n          }>\n        >;\n      }>;\n    }>;\n  }>;\n}\n\nexport default class Template extends React.Component<TemplateProps> {\n  render() {\n    const {\n      data: {\n        mdx: {\n          body,\n          fields: {docgen},\n          frontmatter: {description, title},\n          tableOfContents,\n        },\n      },\n    } = this.props;\n    const parsedDocgen = JSON.parse(docgen);\n\n    return (\n      <Layout main={false}>\n        <div className=\"flex flex-wrap -mx-3\">\n          <ComponentsNavigation className=\"px-3 w-full md:w-1/4 lg:w-2/12\" />\n          <main className=\"px-3 w-full md:w-3/4 lg:w-10/12\">\n            <Heading>{title}</Heading>\n            <div className=\"flex flex-wrap -mx-3\">\n              <nav className=\"px-3 w-full md:order-2 md:w-1/3 lg:w-1/4\">\n                <div className=\"text-gray-700\">\n                  <Heading variant={3}>Contents:</Heading>\n                  <ul>\n                    {tableOfContents.items?.map(({title, url}) => (\n                      <li key={url}>\n                        <Anchor className=\"block\" href={url}>\n                          {title}\n                        </Anchor>\n                      </li>\n                    ))}\n                    <li>\n                      <Anchor className=\"block\" href=\"#component-api\">\n                        Component API\n                      </Anchor>\n                    </li>\n                  </ul>\n                </div>\n              </nav>\n              <div className=\"px-3 w-full md:w-2/3 lg:w-3/4\">\n                {!!description && (\n                  <p className=\"leading-snug mb-8 mt-0 text-xl\">\n                    {description}\n                  </p>\n                )}\n                <Knobs />\n                <MDXRenderer>{body}</MDXRenderer>\n                <Heading id=\"component-api\" variant={2}>\n                  Component API\n                </Heading>\n                {!!parsedDocgen.props && (\n                  <>\n                    <Heading id=\"props\" variant={3}>\n                      Props\n                    </Heading>\n                    <PropsTable className=\"my-4\" props={parsedDocgen.props} />\n                  </>\n                )}\n                {Array.isArray(parsedDocgen.methods) &&\n                  !!parsedDocgen.methods.length && (\n                    <>\n                      <Heading id=\"methods\" variant={3}>\n                        Methods\n                      </Heading>\n                      <MethodsTable\n                        className=\"my-4\"\n                        methods={parsedDocgen.methods}\n                      />\n                    </>\n                  )}\n              </div>\n            </div>\n          </main>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(fields: {slug: {eq: $slug}}) {\n      body\n      fields {\n        docgen\n      }\n      frontmatter {\n        description\n        title\n      }\n      tableOfContents(maxDepth: 2)\n    }\n  }\n`;\n"],"sourceRoot":""}