{"version":3,"sources":["webpack:///./src/components/internal/ComponentsNavigation.tsx","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./src/components/internal/Code.tsx","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/components/internal/MethodsTable.tsx","webpack:///./src/components/internal/PropsTable.tsx","webpack:///./src/components/internal/Preview.tsx","webpack:///./src/components/internal/Template.tsx"],"names":["ComponentsNavigation","className","rest","result","clsx","variant","allMdx","nodes","map","slug","fields","title","frontmatter","key","to","site","pathPrefix","MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","Function","call","Code","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","fn","MethodsTable","methods","description","name","params","returns","type","Fragment","PropsTable","prop","defaultValue","value","required","aria-label","Preview","useLocation","pathname","includes","index","join","CodeBlock","language","preview","Alert","Button","Template","render","this","data","body","docgen","tableOfContents","parsedDocgen","JSON","parse","Layout","main","Heading","items","url","Anchor","href","id","Array","isArray","Component","query"],"mappings":"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","file":"component---src-components-internal-template-tsx-e1f3747eedfbc717d736.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport {graphql, useStaticQuery} from 'gatsby';\nimport {Link} from './Anchor';\nimport {Heading} from './Heading';\n\nexport type ComponentsNavigationProps = React.HTMLAttributes<HTMLElement>;\n\nexport const ComponentsNavigation: React.FC<ComponentsNavigationProps> = ({\n  className,\n  ...rest\n}) => {\n  const result = useStaticQuery<{\n    allMdx: {\n      nodes: Array<{\n        fields: {\n          slug: string;\n        };\n        frontmatter: {\n          title: string;\n        };\n      }>;\n    };\n    site: {\n      pathPrefix: string;\n    };\n  }>(graphql`\n    {\n      allMdx(\n        filter: {fileAbsolutePath: {regex: \"/components/external/\"}}\n        sort: {fields: frontmatter___title}\n      ) {\n        nodes {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  return (\n    <nav className={clsx('text-gray-700', className)} {...rest}>\n      <Heading className=\"mb-0\" variant={3}>\n        Navigation\n      </Heading>\n      <ul>\n        {result.allMdx.nodes.map(({fields: {slug}, frontmatter: {title}}) => (\n          <li key={slug}>\n            <Link to={`${result.site.pathPrefix}${slug}`}>{title}</Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","import React from 'react';\nimport clsx from 'clsx';\n\nexport type CodeProps = React.HTMLAttributes<HTMLElement>;\n\nexport const Code: React.FC<CodeProps> = ({className, ...rest}) => (\n  <code\n    className={clsx(\n      'bg-gray-100 p-1 rounded-sm text-red-700 text-sm',\n      className\n    )}\n    {...rest}\n  />\n);\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {Code} from './Code';\n\nexport interface MethodsTableProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  methods: ReadonlyArray<\n    Readonly<{\n      description?: string;\n      docblock: string;\n      modifiers: any[];\n      name: string;\n      params: ReadonlyArray<\n        Readonly<{\n          description?: any;\n          name: string;\n          type: Readonly<{\n            name: string;\n          }>;\n        }>\n      >;\n      returns: string | null;\n    }>\n  >;\n}\n\nexport const MethodsTable: React.FC<MethodsTableProps> = ({\n  className,\n  methods,\n  ...rest\n}) => (\n  <table className={clsx('border-collapse border-gray-300 w-full')} {...rest}>\n    <thead className=\"align-top border-b text-left\">\n      <th className=\"p-2\">Name</th>\n      <th className=\"p-2\">Description</th>\n      <th className=\"p-2\">Parameters</th>\n      <th className=\"p-2\">Return type</th>\n    </thead>\n    <tbody className=\"align-top\">\n      {methods.map(({description, name, params, returns}) => (\n        <tr key={name}>\n          <th className=\"font-normal p-2 text-left\" scope=\"row\">\n            <Code>{name}</Code>\n          </th>\n          <td className=\"p-2 text-sm\">{description}</td>\n          <td className=\"p-2\">\n            {!!params.length && (\n              <dl>\n                {params.map(({description, name, type}) => (\n                  <React.Fragment key={name}>\n                    <dt>\n                      <Code>\n                        {name}: {type.name}\n                      </Code>\n                    </dt>\n                    <dd>{description}</dd>\n                  </React.Fragment>\n                ))}\n              </dl>\n            )}\n          </td>\n          <td className=\"p-2\">\n            <Code>{returns ? returns : 'void'}</Code>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport {Code} from './Code';\n\nexport interface PropsTableProps extends React.HTMLAttributes<HTMLDivElement> {\n  readonly props: Record<\n    string,\n    Readonly<{\n      defaultValue?: Readonly<{\n        value: string;\n      }>;\n      description?: string;\n      name: string;\n      parent?: Readonly<{\n        filename: string;\n        name: string;\n      }>;\n      required: boolean;\n      type: any;\n    }>\n  >;\n}\n\nexport const PropsTable: React.FC<PropsTableProps> = ({\n  className,\n  props,\n  ...rest\n}) => (\n  <table\n    className={clsx('border-collapse border-gray-300 w-full', className)}\n    {...rest}\n  >\n    <thead className=\"align-top border-b text-left\">\n      <th className=\"p-2\">Name</th>\n      <th className=\"p-2\">Type</th>\n      <th className=\"p-2\">Default value</th>\n      <th className=\"p-2\">Description</th>\n      <th className=\"p-2\">Required?</th>\n    </thead>\n    <tbody className=\"align-top\">\n      {Object.keys(props).map((key) => {\n        const prop = props[key];\n\n        return (\n          <tr className=\"border-b\" key={key}>\n            <th className=\"font-normal p-2\" scope=\"row\">\n              <Code>{prop.name}</Code>\n            </th>\n            <td className=\"p-2\">\n              <Code>{prop.type.name}</Code>\n            </td>\n            <td className=\"p-2\">\n              {!!prop.defaultValue && <Code>{prop.defaultValue.value}</Code>}\n            </td>\n            <td className=\"p-2 text-sm\">{prop.description}</td>\n            <td className=\"p-2 text-sm\">\n              {prop.required ? (\n                <span aria-label=\"Required\">Yes</span>\n              ) : (\n                <span aria-label=\"Not required\">No</span>\n              )}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React, {useState} from 'react';\nimport {useLocation} from '@reach/router';\n\nimport Alert from '../external/Alert';\nimport Button from '../external/Button';\nimport { CodeBlock } from './CodeBlock';\n\nexport interface PreviewProps {\n  props: Array<{\n    children: string\n    variant: string\n  }>\n}\n\nexport const Preview: React.FC<PreviewProps> = ({ props }) => {\n  const {pathname} = useLocation();\n  let children: string;\n\n  // TODO: Make Knobs more flexible\n  if (pathname.includes('Alert')) {\n    children = `\n      <div>\n        ${props.map(({ children, variant }, index) => `<div ${index < props.length - 1 ? 'className=\"mb-2\"' : ''}>\n  <Alert variant=\"${variant}\">${children}</Alert>\n</div>`).join('\\n')}\n      </div>`;\n  } else {\n    children = `\n      <div>\n        ${props.map(({ children, variant }) => `<div className=\"mb-2\">\n  <Button variant=\"${variant}\">${children}</Button>\n</div>`).join('\\n')}\n      </div>`;\n  }\n\n  return (\n    <CodeBlock children={children} language=\"tsx\" preview scope={{ Alert, Button }} />\n  );\n};\n","import React from 'react';\nimport {MDXRenderer} from 'gatsby-plugin-mdx';\nimport {graphql} from 'gatsby';\n\nimport Layout from './Layout';\nimport {Anchor} from './Anchor';\nimport {ComponentsNavigation} from './ComponentsNavigation';\nimport {Heading} from './Heading';\nimport {MethodsTable} from './MethodsTable';\nimport {PropsTable} from './PropsTable';\nimport {Preview} from './Preview';\n\nexport interface TemplateProps {\n  data: Readonly<{\n    mdx: Readonly<{\n      body: string;\n      fields: Readonly<{\n        docgen: string;\n      }>;\n      frontmatter: Readonly<{\n        description?: string;\n        props: ReadonlyArray<Readonly<{\n          children: string\n          variant: string\n        }>>;\n        title: string;\n      }>;\n      tableOfContents: Readonly<{\n        items?: ReadonlyArray<\n          Readonly<{\n            title: string;\n            url: string;\n          }>\n        >;\n      }>;\n    }>;\n  }>;\n}\n\nexport default class Template extends React.Component<TemplateProps> {\n  render() {\n    const {\n      data: {\n        mdx: {\n          body,\n          fields: {docgen},\n          frontmatter: {description, props, title},\n          tableOfContents,\n        },\n      },\n    } = this.props;\n    const parsedDocgen = JSON.parse(docgen);\n\n    return (\n      <Layout main={false}>\n        <div className=\"flex flex-wrap -mx-3\">\n          <ComponentsNavigation className=\"px-3 w-full md:w-1/4 lg:w-2/12\" />\n          <main className=\"px-3 w-full md:w-3/4 lg:w-10/12\">\n            <Heading>{title}</Heading>\n            <div className=\"flex flex-wrap -mx-3\">\n              <nav className=\"px-3 w-full md:order-2 md:w-1/3 lg:w-1/4\">\n                <div className=\"text-gray-700\">\n                  <Heading variant={3}>Contents:</Heading>\n                  <ul>\n                    {tableOfContents.items?.map(({title, url}) => (\n                      <li key={url}>\n                        <Anchor className=\"block\" href={url}>\n                          {title}\n                        </Anchor>\n                      </li>\n                    ))}\n                    <li>\n                      <Anchor className=\"block\" href=\"#component-api\">\n                        Component API\n                      </Anchor>\n                    </li>\n                  </ul>\n                </div>\n              </nav>\n              <div className=\"px-3 w-full md:w-2/3 lg:w-3/4\">\n                {!!description && (\n                  <p className=\"leading-snug mb-8 mt-0 text-xl\">\n                    {description}\n                  </p>\n                )}\n                <Preview props={props} />\n                <MDXRenderer>{body}</MDXRenderer>\n                <Heading id=\"component-api\" variant={2}>\n                  Component API\n                </Heading>\n                {!!parsedDocgen.props && (\n                  <>\n                    <Heading id=\"props\" variant={3}>\n                      Props\n                    </Heading>\n                    <PropsTable className=\"my-4\" props={parsedDocgen.props} />\n                  </>\n                )}\n                {Array.isArray(parsedDocgen.methods) &&\n                  !!parsedDocgen.methods.length && (\n                    <>\n                      <Heading id=\"methods\" variant={3}>\n                        Methods\n                      </Heading>\n                      <MethodsTable\n                        className=\"my-4\"\n                        methods={parsedDocgen.methods}\n                      />\n                    </>\n                  )}\n              </div>\n            </div>\n          </main>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(fields: {slug: {eq: $slug}}) {\n      body\n      fields {\n        docgen\n      }\n      frontmatter {\n        description\n        props {\n          children\n          variant\n        }\n        title\n      }\n      tableOfContents(maxDepth: 2)\n    }\n  }\n`;\n"],"sourceRoot":""}