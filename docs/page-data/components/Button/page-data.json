{"componentChunkName":"component---src-components-internal-template-tsx","path":"/components/Button/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Button\",\n  \"description\": \"The Button is the base interactive component for demo-library: it affords\\nnavigation, form submission, and application state changes.\\n\",\n  \"props\": [{\n    \"children\": \"Primary button\",\n    \"variant\": \"primary\"\n  }, {\n    \"children\": \"Secondary button\",\n    \"variant\": \"secondary\"\n  }, {\n    \"children\": \"Teriary button\",\n    \"variant\": \"tertiary\"\n  }]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Three variations of Button exist to demonstrate the level of interaction: primary, secondary, and tertiary.\"), mdx(\"h3\", null, \"Related\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#\"\n  }), \"Interaction and feedback \\u2197\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#\"\n  }), \"Design specifications \\u2197\"))), mdx(\"h2\", null, \"Usage\"), mdx(\"p\", null, \"Import the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Button\"), \" component into a React component in your project:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"import {Button} from 'demo-library';\\n\")), mdx(\"p\", null, \"Use Button by passing it \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"children\"), \" and an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onClick\"), \" handler in your React component:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"import React from 'react'\\nimport {Button} from 'demo-library';\\n\\nexport const MyComponent: React.FC<any> = () => {\\n  return (\\n    <Button\\n      onClick={(event) => {\\n        console.log('Clicked!', event)\\n      }}\\n    >\\n      My Button\\n    </Button>\\n  )\\n}\\n\")), mdx(\"h2\", null, \"Variants\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Button\"), \" comes with three variations, set through the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"variant\"), \" property:\"), mdx(\"h3\", null, \"Primary\"), mdx(\"p\", null, \"Use the primary variant for call to action, form submission, dialog or modal\\ntrigger.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Button>Primary button</Button>\\n\")), mdx(\"h3\", null, \"Secondary\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Button variant=\\\"secondary\\\">Secondary button</Button>\\n\")), mdx(\"h3\", null, \"Tertiary\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Button variant=\\\"tertiary\\\">Tertiary button</Button>\\n\")), mdx(\"h2\", null, \"Accessibility\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Button\"), \" component has a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"role=\\\"button\"), \"\\\" property provided. Ensure that the\\nelement has the appropriate role for its use:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"role=\\\"submit\\\"\"), \" for a form submission button\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"role=\\\"reset\\\"\"), \" for a form reset button\")), mdx(\"h3\", null, \"Related\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.deque.com/blog/accessible-aria-buttons/\"\n  }), \"\\\"Building Accessible Buttons with ARIA\\\" on Deque \\u2197\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role/\"\n  }), \"\\\"ARIA: button role\\\" on MDN \\u2197\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"docgen":"{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"variant\":{\"defaultValue\":{\"value\":\"primary\"},\"description\":\"The button's visual variant, representing the importance of the button's invoked action.\",\"name\":\"variant\",\"parent\":{\"fileName\":\"hello-gatsby/src/components/external/Button.tsx\",\"name\":\"ButtonProps\"},\"required\":false,\"type\":{\"name\":\"\\\"primary\\\" | \\\"secondary\\\" | \\\"tertiary\\\" | undefined\"}}}}"},"frontmatter":{"description":"The Button is the base interactive component for demo-library: it affords\nnavigation, form submission, and application state changes.\n","props":[{"children":"Primary button","variant":"primary"},{"children":"Secondary button","variant":"secondary"},{"children":"Teriary button","variant":"tertiary"}],"title":"Button"},"tableOfContents":{"items":[{"url":"#usage","title":"Usage"},{"url":"#variants","title":"Variants"},{"url":"#accessibility","title":"Accessibility"}]}}},"pageContext":{"slug":"/components/Button/"}}}